#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1    &kp N2  &kp N3        &kp N4     &kp N5    &kp UP_ARROW     &kp N6    &kp N7       &kp N8         &kp N9   &kp N0     &kp BACKSPACE
&kp TAB     &kp Q     &kp W   &kp F         &kp P      &kp G     &kp DOWN_ARROW   &kp J     &kp L        &kp U          &kp Y    &kp SEMI   &kp BSLH
&kp LCTRL   &kp A     &kp R   &kp S         &kp T      &kp D     &kp LEFT_ARROW   &kp H     &kp N        &kp E          &kp I    &kp O      &kp ENTER
&kp LSHFT   &kp Z     &kp X   &kp C         &kp V      &kp B     &kp RIGHT_ARROW  &kp K     &kp M        &kp COMMA      &kp DOT  &kp FSLH   &kp RSHIFT
&kp C_MUTE  &kp LWIN  &mo 2   &kp LEFT_ALT  &kp SPACE  &mo 1     &kp ENTER        &kp RWIN  &lt 1 SPACE  &kp RIGHT_ALT  &kp SQT  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp PSCRN      &kp F1     &kp F2      &kp F3      &kp F4       &kp F5            &mmv MOVE_UP     &kp F6      &kp F7       &kp F8            &kp F9             &kp F10         &kp DEL
&kp GRAVE      &kp TILDE  &mkp LCLK   &mkp MCLK   &mkp RCLK    &msc SCRL_UP      &mmv MOVE_DOWN   &kp PG_UP   &kp F11      &kp UP            &kp F12            &kp UNDERSCORE  &kp PLUS
&kp CAPS       &kp SQT    &kp C_PREV  &kp C_PP    &kp C_NEXT   &msc SCRL_DOWN    &mmv MOVE_LEFT   &kp PG_DN   &kp LEFT     &kp DOWN          &kp RIGHT          &kp MINUS       &kp EQUAL
&kp BACKSPACE  &kp DQT    &kp K_CUT   &kp K_COPY  &kp K_PASTE  &kp INS           &mmv MOVE_RIGHT  &kp K_UNDO  &kp K_AGAIN  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE
&kp C_MUTE     &trans     &trans      &trans      &trans       &trans            &mkp LCLK        &trans      &trans       &trans            &trans             &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans          &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &mmv MOVE_UP     &kp F1  &kp F2  &kp F3  &kp F4   &kp F5    &kp F6
&trans          &bt BT_CLR    &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &rgb_ug RGB_TOG    &mmv MOVE_DOWN   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11   &kp F12
&out OUT_TOG    &out OUT_USB  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_HUD  &rgb_ug RGB_ON     &mmv MOVE_LEFT   &trans  &trans  &trans  &trans   &kp LBRC  &kp RBRC
&bt BT_CLR_ALL  &out OUT_BLE  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &trans           &rgb_ug RGB_OFF    &mmv MOVE_RIGHT  &trans  &trans  &trans  &trans   &trans    &trans
&trans          &trans        &trans           &trans           &trans           &trans             &mkp LCLK        &trans  &trans  &trans  &trans   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
